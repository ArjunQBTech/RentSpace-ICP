type User__1 = 
 record {
   dob: text;
   firstName: text;
   lastName: text;
   userEmail: text;
 };
type UserInfo = 
 record {
   agreementStatus: bool;
   createdAt: text;
   dob: text;
   firstName: text;
   hostStatus: bool;
   lastName: text;
   userEmail: text;
   userGovId: text;
   userProfile: text;
   userType: text;
   verificationStatus: bool;
 };
type UserId = text;
type User = 
 service {
   checkUserExist: () -> (bool) query;
   createUser: (User__1) -> ();
   getOwner: () -> (text) query;
   getUserInfo: () -> (opt UserInfo) query;
   getUserInfoByPrincipal: (principal) -> (opt UserInfo) query;
   scanUsers: (nat, nat) -> (vec record {
                                   UserId;
                                   UserInfo;
                                 });
   updateUserInfo: (UserInfo) -> (opt UserInfo);
   whoami: () -> (text) query;
 };
service : () -> User
