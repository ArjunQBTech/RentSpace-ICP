type ScanReview = 
 record {
   nextKey: opt text;
   review: vec Review__1;
 };
type ScalingOptions = 
 record {
   autoScalingCanisterId: text;
   limit: nat;
   limitType: ScalingLimitType;
 };
type ScalingLimitType = 
 variant {
   count;
   heapSize;
 };
type Review__1 = 
 record {
   bookingId: text;
   createdAt: text;
   des: text;
   rating: float64;
   title: text;
 };
type Review = 
 service {
   createReview: (text, Review__1) -> ();
   getHotelId: () -> (vec text) query;
   getOwner: () -> (text) query;
   getPk: () -> (text) query;
   getReviewIdsFromHotelId: (text) -> (vec text) query;
   getReviewInfo: (text) -> (opt Review__1) query;
   scanUsers: (text, text, nat, opt bool) -> (ScanReview) query;
   skExists: (text) -> (bool) query;
   transferCycles: () -> ();
   updateReviewInfo: (text, Review__1) -> (opt Review__1);
 };
service : (record {
             owners: opt vec principal;
             partitionKey: text;
             scalingOptions: ScalingOptions;
           }) -> Review
